// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.bootstrapdojo.web;

import com.bootstrapdojo.domain.Tshirt;
import com.bootstrapdojo.service.api.TshirtService;
import com.bootstrapdojo.web.TshirtsItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect TshirtsItemJsonController_Roo_JSON {
    
    declare @type: TshirtsItemJsonController: @RestController;
    
    declare @type: TshirtsItemJsonController: @RequestMapping(value = "/api/tshirts/{tshirt}", name = "TshirtsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param tshirtService
     */
    @Autowired
    public TshirtsItemJsonController.new(TshirtService tshirtService) {
        this.tshirtService = tshirtService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Tshirt
     */
    @ModelAttribute
    public Tshirt TshirtsItemJsonController.getTshirt(@PathVariable("tshirt") Long id) {
        Tshirt tshirt = tshirtService.findOne(id);
        if (tshirt == null) {
            throw new NotFoundException(String.format("Tshirt with identifier '%s' not found",id));
        }
        return tshirt;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tshirt
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> TshirtsItemJsonController.show(@ModelAttribute Tshirt tshirt) {
        return ResponseEntity.status(HttpStatus.FOUND).body(tshirt);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tshirt
     * @return UriComponents
     */
    public static UriComponents TshirtsItemJsonController.showURI(Tshirt tshirt) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(TshirtsItemJsonController.class).show(tshirt))
            .buildAndExpand(tshirt.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedTshirt
     * @param tshirt
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> TshirtsItemJsonController.update(@ModelAttribute Tshirt storedTshirt, @Valid @RequestBody Tshirt tshirt, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        tshirt.setId(storedTshirt.getId());
        tshirtService.save(tshirt);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param tshirt
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> TshirtsItemJsonController.delete(@ModelAttribute Tshirt tshirt) {
        tshirtService.delete(tshirt);
        return ResponseEntity.ok().build();
    }
    
}
